within AES.Coursework.Tuning_brushup;

model Exploiting_2dof
  extends Icons.CourseworkModel;

  Modelica.Blocks.Continuous.TransferFunction Process_1(a = {10, 11, 1}, b = {1})  annotation(
    Placement(visible = true, transformation(origin = {90, 30}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.Blocks.Math.Add ald_1 annotation(
    Placement(visible = true, transformation(origin = {50, 30}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.Blocks.Sources.RealExpression SP(y = if time < 0 then 0 else 1)  annotation(
    Placement(visible = true, transformation(origin = {-150, 24}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.Blocks.Sources.RealExpression LD(y = if time < 100 then 0 else 5)  annotation(
    Placement(visible = true, transformation(origin = {-150, 70}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.Blocks.Math.Add ald_2 annotation(
    Placement(visible = true, transformation(origin = {50, -30}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.Blocks.Continuous.TransferFunction Process_2(a = {10, 11, 1}, b = {1}) annotation(
    Placement(visible = true, transformation(origin = {90, -30}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.Blocks.Continuous.TransferFunction Cff_1 annotation(
    Placement(visible = true, transformation(origin = {-90, 24}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.Blocks.Continuous.TransferFunction Cff_2(a = {5, 1}, b = {1})  annotation(
    Placement(visible = true, transformation(origin = {-90, -36}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.Blocks.Continuous.TransferFunction Cfb_1(a = {10, 0}, b = 2 * {10, 1})  annotation(
    Placement(visible = true, transformation(origin = {-10, 24}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.Blocks.Continuous.TransferFunction Cfb_2(a = {4, 0}, b = 4 * {4, 1})  annotation(
    Placement(visible = true, transformation(origin = {-10, -36}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.Blocks.Math.Feedback fb_1 annotation(
    Placement(visible = true, transformation(origin = {-50, 24}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.Blocks.Math.Feedback fb_2 annotation(
    Placement(visible = true, transformation(origin = {-48, -36}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
equation
  connect(ald_1.y, Process_1.u) annotation(
    Line(points = {{61, 30}, {77, 30}}, color = {0, 0, 127}));
  connect(LD.y, ald_1.u1) annotation(
    Line(points = {{-139, 70}, {22, 70}, {22, 36}, {38, 36}}, color = {0, 0, 127}));
  connect(LD.y, ald_2.u1) annotation(
    Line(points = {{-139, 70}, {22, 70}, {22, -24}, {38, -24}}, color = {0, 0, 127}));
  connect(ald_2.y, Process_2.u) annotation(
    Line(points = {{61, -30}, {77, -30}}, color = {0, 0, 127}));
  connect(Cfb_1.y, ald_1.u2) annotation(
    Line(points = {{2, 24}, {38, 24}}, color = {0, 0, 127}));
  connect(Cfb_2.y, ald_2.u2) annotation(
    Line(points = {{1, -36}, {38, -36}}, color = {0, 0, 127}));
  connect(SP.y, Cff_1.u) annotation(
    Line(points = {{-139, 24}, {-102, 24}}, color = {0, 0, 127}));
  connect(SP.y, Cff_2.u) annotation(
    Line(points = {{-138, 24}, {-120, 24}, {-120, -36}, {-102, -36}}, color = {0, 0, 127}));
  connect(Cff_1.y, fb_1.u1) annotation(
    Line(points = {{-78, 24}, {-58, 24}}, color = {0, 0, 127}));
  connect(fb_1.y, Cfb_1.u) annotation(
    Line(points = {{-40, 24}, {-22, 24}}, color = {0, 0, 127}));
  connect(Cff_2.y, fb_2.u1) annotation(
    Line(points = {{-78, -36}, {-56, -36}}, color = {0, 0, 127}));
  connect(fb_2.y, Cfb_2.u) annotation(
    Line(points = {{-38, -36}, {-22, -36}}, color = {0, 0, 127}));
  connect(Process_1.y, fb_1.u2) annotation(
    Line(points = {{102, 30}, {120, 30}, {120, 0}, {-50, 0}, {-50, 16}}, color = {0, 0, 127}));
  connect(Process_2.y, fb_2.u2) annotation(
    Line(points = {{102, -30}, {120, -30}, {120, -60}, {-48, -60}, {-48, -44}}, color = {0, 0, 127}));
  annotation(
    Diagram(coordinateSystem(extent = {{-200, -100}, {200, 100}})),
    experiment(StartTime = 0, StopTime = 200, Tolerance = 1e-6, Interval = 0.4),
  __OpenModelica_commandLineOptions = "--matchingAlgorithm=PFPlusExt --indexReductionMethod=dynamicStateSelection -d=initialization,NLSanalyticJacobian,newInst -d=aliasConflicts -d=aliasConflicts -d=aliasConflicts -d=aliasConflicts ",
  __OpenModelica_simulationFlags(lv = "LOG_STATS", s = "dassl"));
end Exploiting_2dof;